import java.io.BufferedReader;
import java.util.Arrays;
import java.util.Scanner;
import java.util.Stack;

public class Main {
    //6190 정곤이의 단조 증가하는 수
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();

        int N, i, j, mul, max;
        int[] a;

        for (int tc = 1; tc <= T; tc++) {
            N = sc.nextInt();
            a = new int[N + 1];

            // 단조 증가하는 수가 없을때 -1을 출력하므로, -1으로 일단 초기화
            max = -1;

            for (i = 1; i <= N; i++) {
                a[i] = sc.nextInt();
            }

            for (i = 1; i <= N - 1; i++) {
                for (j = i + 1; j <= N; j++) {
                    //1번인덱스, 2번인덱스의 곱부터 시작
                    mul = a[i] * a[j];
                    //단조 증가 확인 함수를 통해 증가를 확인하고, 저장된 max보다 크면 max값 갱신
                    if (isMonoIncreasing(mul) && mul > max) max = mul;
                }
            }
            System.out.format("#%d %d\n", tc, max);
        }
        sc.close();
    }

    //단조 증가 확인 함수
    static boolean isMonoIncreasing(int num) {
        int q, r, cur;
        //최댓값의 초기값을 9로 설정 ??..
        cur = 9;
        //수를 오른쪽부터 확인하면서 cur보다 큰 수가 나타나면 단조 증가가 아니므로 false 반환
        for (q = num; q > 0; q /= 10) {
            r = q % 10;
            if (r > cur) return false;
            //cur 보다 작으면 cur값 갱신
            if (r < cur) cur = r;
        }
        //모든 자리수 확인 후 단조 증가이므로 true 반환
        return true;
    }

}
